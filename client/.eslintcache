[{"C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\styles.js":"1","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\Components\\Login\\Login.js":"2","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\Components\\App\\useToken.js":"3","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\Components\\App\\App.js":"4","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\reducers\\index.js":"5","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\api\\index.js":"6","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\reducers\\users.js":"7","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\Components\\Shows\\Shows.js":"8","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\Components\\Shows\\styles.js":"9","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\Components\\Shows\\ShowCard.js":"10","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\actions\\shows.js":"11","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\actions\\users.js":"12","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\index.js":"13","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\reducers\\shows.js":"14","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\constants\\actionTypes.js":"15","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\Components\\Shows\\AddShow.js":"16"},{"size":1048,"mtime":1611339490650,"results":"17","hashOfConfig":"18"},{"size":4147,"mtime":1613598845619,"results":"19","hashOfConfig":"18"},{"size":1066,"mtime":1612626202393,"results":"20","hashOfConfig":"18"},{"size":1398,"mtime":1611604563990,"results":"21","hashOfConfig":"18"},{"size":153,"mtime":1613311635099,"results":"22","hashOfConfig":"18"},{"size":876,"mtime":1613677735878,"results":"23","hashOfConfig":"18"},{"size":589,"mtime":1613598582326,"results":"24","hashOfConfig":"18"},{"size":12166,"mtime":1613677730392,"results":"25","hashOfConfig":"18"},{"size":2978,"mtime":1612317263672,"results":"26","hashOfConfig":"18"},{"size":2851,"mtime":1612305365722,"results":"27","hashOfConfig":"18"},{"size":1334,"mtime":1613677742507,"results":"28","hashOfConfig":"18"},{"size":1088,"mtime":1613597835886,"results":"29","hashOfConfig":"18"},{"size":540,"mtime":1613346327906,"results":"30","hashOfConfig":"18"},{"size":585,"mtime":1613677738694,"results":"31","hashOfConfig":"18"},{"size":177,"mtime":1613346708927,"results":"32","hashOfConfig":"18"},{"size":2050,"mtime":1613677733588,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},"1bw16j6",{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\styles.js",["70"],"import { blue } from '@material-ui/core/colors';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nexport default makeStyles({\r\n  header: {\r\n    marginBottom: '15px',\r\n    position: 'relative',\r\n    borderRadius: '15px',\r\n    height: '100px',\r\n    backgroundColor: '#a6a6a6',\r\n    color: 'white',\r\n  },\r\n\r\n  logins: {\r\n    position: 'absolute',\r\n    top: '3%',\r\n    right: '0%',\r\n    width: '20%',\r\n    height: '90%',\r\n  }, \r\n\r\n  home: {\r\n    position: 'relative',\r\n  },\r\n\r\n  loginButton: {\r\n    backgroundColor: 'grey',\r\n    margin: '2px',\r\n    minWidth: '90px'\r\n  },\r\n\r\n  loginMenu: {\r\n    position: 'absolute',\r\n    backgroundColor: 'blue',\r\n    color: 'white',\r\n    zIndex: '50',\r\n    height: 'full',\r\n    width: '85%',\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n  },\r\n\r\n  regMenu: {\r\n    position: 'absolute',\r\n    backgroundColor: 'red',\r\n    color: 'white',\r\n    zIndex: '50',\r\n    height: '500px',\r\n    width: '85%',\r\n    top: '40%',\r\n    direction: \"column\",\r\n    justify: \"center\",\r\n    alignItems: \"center\",\r\n  }\r\n\r\n})","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\Components\\Login\\Login.js",["71","72","73","74","75","76"],"C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\Components\\App\\useToken.js",[],"C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\Components\\App\\App.js",["77","78","79","80","81","82","83","84","85"],"C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\reducers\\index.js",[],"C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\api\\index.js",[],"C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\reducers\\users.js",["86","87"],"C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\Components\\Shows\\Shows.js",["88","89","90","91","92","93"],"import React, { useState, useEffect } from 'react';\r\nimport ShowCard from './ShowCard';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faStar as solidStar, faCaretUp, faCaretDown, faGreaterThan, faLessThan}  from '@fortawesome/free-solid-svg-icons';\r\nimport { faStar as emptyStar}  from '@fortawesome/free-regular-svg-icons';\r\nimport {useSpring, useTrail, config, animated} from 'react-spring';\r\nimport useStyles from './styles';\r\nimport { Grid, Table, TableHead, TableRow, TableCell, TableBody, Button, TextField, Container, Typography } from '@material-ui/core';\r\nimport { getShows } from '../../actions/shows';\r\nimport { getUsers } from '../../actions/users';\r\nimport AddShow from './AddShow';\r\n\r\n\r\n\r\nfunction getGenres(shows)  {\r\n    const genres = [];\r\n    shows.forEach(show => {\r\n            genres.push(show.genre)\r\n        });\r\n    const genreSelectors = [...new Set(genres)];\r\n\r\n    const allGenres = genreSelectors;\r\n    const g = [];\r\n    allGenres.forEach((genre) => {\r\n        g.push({genre:genre, selected:false});\r\n    });\r\n    return g\r\n}\r\n\r\nfunction Shows() {\r\n\r\n    const shows = useSelector((state) => state.shows);\r\n    const users = useSelector((state) => state);\r\n\r\n    const classes = useStyles();\r\n\r\n    const [genType, setGenType] = useState('All');\r\n    const [rating, setRating] = useState(1);\r\n    const [ascending, setAscending] = useState(true);\r\n    const [alphaUp, setAlphaUp] = useState(false);\r\n    const [ratingUp, setRatingUp] = useState(true);\r\n    const [search, setSearch] = useState('');\r\n    const [alpha, setAlpha] = useState(true);\r\n    //const [anchorEl, setAnchorEl] = useState(null);\r\n    const [genreLinks, setGenreLinks] = useState(getGenres(shows));\r\n    const [tags, setTags] = useState([]);\r\n    //const [openMenu, setOpenMenu] = useState(false);\r\n\r\n    const dispatch = useDispatch();\r\n    useEffect(() => {\r\n        dispatch(getShows());\r\n        dispatch(getUsers());\r\n        setGenreLinks(getGenres(shows));\r\n        //console.log(getGenres(shows));\r\n        //console.log(shows);\r\n    }, [dispatch])\r\n\r\n    const clearAll = () => {\r\n        setGenType('All');\r\n        setSearch('');\r\n        setRating(1);\r\n        setAscending(true);\r\n        setAlphaUp(false);\r\n        setRatingUp(true);\r\n    }\r\n\r\n    /*const handleClose = () => {\r\n        setOpenMenu(false);\r\n    }*/\r\n\r\n    const fadeIn = useSpring({\r\n        from: { opacity: 0 },\r\n        to: { opacity: 1 }\r\n        ,config: {duration: 1000}\r\n      });\r\n\r\n    const flyIn = useSpring({\r\n        from: {opacity: 0, marginTop: -100, marginBottom: 100},\r\n        to: { opacity: 1, marginTop: 0, marginBottom: 0 },\r\n        config: config.slow\r\n    });\r\n\r\n    const GenreTicker = () => {\r\n        //console.log(genreLinks);\r\n        const genres = [];\r\n        shows.forEach(show => {\r\n                genres.push(show.genre)\r\n            });\r\n        const genreSelectors = [...new Set(genres)];\r\n    \r\n        const allGenres = genreSelectors;\r\n        const g = [];\r\n        allGenres.forEach((genre) => {\r\n            if (!genre){\r\n                console.log('no genre button here');\r\n            }\r\n            else if (genre === genType) {\r\n            g.push({genre:genre, selected:true}) \r\n            } else {\r\n            g.push({genre:genre, selected:false});\r\n        }\r\n        });\r\n\r\n        //console.log(genreLinks);\r\n        return (\r\n            <Container className={classes.ticker}>  \r\n                    {g.map((genre, index) => ((!genre.selected) &&\r\n                        <Button key={index} className={classes.tickerbutton} onClick={() => setGenType(genre.genre)} >{genre.genre} </Button>\r\n                    ))}\r\n                    <Button className={classes.tickerbutton} onClick={() => setGenType('All')} > All </Button>\r\n            </Container>\r\n        )\r\n    }\r\n\r\n    /*\r\n    const GenreButtons = () => {\r\n        const genres = [];\r\n        shows.forEach(show => {\r\n                genres.push(show.genre)\r\n            });\r\n        const genreSelectors = [...new Set(genres)];\r\n    \r\n        const allGenres = genreSelectors;\r\n        const g = [];\r\n        allGenres.forEach((genre) => {\r\n            g.push({genre:genre, selected:false});\r\n        });\r\n\r\n        return (\r\n            <div>\r\n            <Button \r\n            className={classes.button}\r\n            onClick={() => setOpenMenu(!openMenu)}>\r\n                {genType}\r\n            </Button>\r\n            {openMenu &&\r\n            <Container className={classes.info}>  \r\n                <Grid container className={classes.col}>\r\n                    {g.map((genre, index) => ((!genre.selected) &&\r\n                        <Grid item key={index}>\r\n                        <Link className={classes.desc} onClick={() => setGenre(genre.genre)} >{genre.genre} </Link>\r\n                        </Grid>\r\n                    ))}\r\n                </Grid>\r\n            </Container>\r\n            }       \r\n        </div>\r\n        )\r\n    }\r\n    */\r\n\r\n    const addTag = tag => {\r\n        let match = false;\r\n        tags.forEach(prevTag => {\r\n            if (tag === prevTag) {\r\n                match = true;\r\n                }\r\n        });\r\n        if (match === false) {\r\n            setTags(tags => ({...tags, tag}));\r\n        } \r\n    }\r\n\r\n    const FilteredTitles = () => {\r\n        const newdisplay = [];\r\n        try {\r\n        shows.forEach(show => {\r\n            if (show.title.toLowerCase().startsWith(search.toLowerCase().slice(0, Math.max(show.title.length - 1, 1)))) {\r\n                if (show.genre === genType || genType === 'All') {\r\n                    if (tags === '')\r\n                    show.tags.forEach(tag => {\r\n\r\n                    })\r\n                    if(ascending){\r\n                        if(show.rating >= rating){\r\n                            newdisplay.push(show);\r\n                        }\r\n                    } else {\r\n                        if(show.rating <= rating){\r\n                            newdisplay.push(show);\r\n                        }\r\n                    }\r\n                };       \r\n            }\r\n        }); \r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n        if(alpha){\r\n            if(alphaUp){\r\n                newdisplay.sort((a, b) => {\r\n                    if (a.title.toLowerCase() < b.title.toLowerCase()\r\n                    ) return 1;\r\n                    else if (a.title.toLowerCase() > b.title.toLowerCase()\r\n                    ) return -1;\r\n                    else { return 0 };\r\n                })}\r\n            else{\r\n                newdisplay.sort((a, b) => {\r\n                    if (a.title.toLowerCase() < b.title.toLowerCase()\r\n                    ) return -1;\r\n                    else if (a.title.toLowerCase() > b.title.toLowerCase()\r\n                    ) return 1;\r\n                    else { return 0 };\r\n                })}}\r\n        else {\r\n            if(ratingUp){\r\n                newdisplay.sort((a, b) => {\r\n                    if (a.rating < b.rating\r\n                    ) return 1;\r\n                    else if (a.rating > b.rating\r\n                    ) return -1;\r\n                    else { return 0 };\r\n                })}\r\n            else{\r\n                newdisplay.sort((a, b) => {\r\n                    if (a.rating < b.rating\r\n                    ) return -1;\r\n                    else if (a.rating > b.rating\r\n                    ) return 1;\r\n                    else { return 0 };\r\n                })}\r\n            }\r\n    const trail = useTrail(newdisplay.length, {\r\n        from: { opacity: 0 },\r\n        to: { opacity: 1 }\r\n    });\r\n        return <>\r\n                    {/*trail.map((animation, index) => (\r\n                        <animated.div className='position-relative' style={animation} key={index}>\r\n                            <ShowCard\r\n                                show={newdisplay[index]}>\r\n                            </ShowCard>\r\n                        </animated.div>\r\n                    ))*/}\r\n                    {newdisplay.map((show, index) => (                   \r\n                        <ShowCard\r\n                        key={index}\r\n                        show={show}\r\n                        addTag={addTag}>\r\n                    </ShowCard>\r\n                    ))}\r\n                </>\r\n    }\r\n\r\n    const toggleSorts = (name) => {\r\n        console.log(alphaUp, ratingUp);\r\n        console.log(name);\r\n        if (name ==='alpha'){\r\n            setAlphaUp(!alphaUp);\r\n            setAlpha(true);\r\n        }\r\n        else{\r\n            setRatingUp(!ratingUp);\r\n            setAlpha(false);\r\n        }\r\n        console.log(alphaUp, ratingUp);\r\n    }\r\n\r\n    const FiveStars = () => { return (\r\n        <span className='mt-1'>\r\n            <FontAwesomeIcon icon={rating >= 1 ? solidStar : emptyStar} onClick={() => setRating(1)}/>\r\n            <FontAwesomeIcon icon={rating >= 2 ? solidStar : emptyStar} onClick={() => setRating(2)}/>\r\n            <FontAwesomeIcon icon={rating >= 3 ? solidStar : emptyStar} onClick={() => setRating(3)}/>\r\n            <FontAwesomeIcon icon={rating >= 4 ? solidStar : emptyStar} onClick={() => setRating(4)}/>\r\n            <FontAwesomeIcon icon={rating >= 5 ? solidStar : emptyStar} onClick={() => setRating(5)}/>\r\n        </span>\r\n    )}\r\n\r\n    return (\r\n            <Container>\r\n                <GenreTicker/>        \r\n                <Table className={classes.table}>\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className={classes.cell}>\r\n                                <Grid container>\r\n                                <Grid item>\r\n                                    <FontAwesomeIcon className={classes.corner} onClick={() => toggleSorts('alpha')} icon={alphaUp ? faCaretUp : faCaretDown} />\r\n                                        <Typography variant='h5'>Title:  </Typography>\r\n                                        </Grid>\r\n                                        <Grid item className={classes.spaceRight}>\r\n                                            <TextField className={classes.search} id='search-bar' type='text' name='title' value={search} placeholder='Search:' onChange={e => setSearch(e.target.value)}/>\r\n                                        </Grid>\r\n                                </Grid>\r\n                                </TableCell>\r\n                            <TableCell className={classes.cell}>\r\n                            <Grid container>\r\n                                <Grid item>\r\n                                    <Typography variant='h5'>{genType}</Typography>\r\n                                </Grid>\r\n                                <Grid item className={classes.spaceRight}>\r\n                                    {/*<GenreButtons/>*/}\r\n                                </Grid>\r\n                            </Grid>\r\n                                </TableCell>\r\n                            <TableCell className={classes.cell}>\r\n                                    <Typography variant='h5'>Rating</Typography>\r\n                                        <FiveStars/>\r\n                                        <FontAwesomeIcon className={classes.spaceLeft} onClick={() => setAscending(!ascending)} icon={ascending ? faGreaterThan : faLessThan}/>\r\n                                        <FontAwesomeIcon className={classes.corner} onClick={() => toggleSorts('rating')} icon={ratingUp ? faCaretUp : faCaretDown} />\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <FilteredTitles/>\r\n                    </TableBody>\r\n                </Table>\r\n                <Button className={classes.centerButton} onClick={() => clearAll()}>Clear</Button>\r\n                {tags.map((tag, index) => (\r\n                    <Typography variant='p' key={index}>{index} </Typography> \r\n                ))}\r\n                <button onClick={() => console.log(users)}>showwwwws</button>\r\n                <AddShow/>\r\n                </Container>\r\n    )\r\n}\r\n\r\nexport default Shows","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\Components\\Shows\\styles.js",["94"],"C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\Components\\Shows\\ShowCard.js",["95"],"C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\actions\\shows.js",[],["96","97"],"C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\actions\\users.js",["98","99"],"import { FETCH_ALL, CREATE, DELETE, UPDATE, FETCH_USER } from '../constants/actionTypes';\r\nimport * as api from '../api';\r\n//import User from '../../../server/models/showUser';\r\n//const User = require('../../../server/models/showUser');\r\n//Action creators > function that returns an action\r\nexport const getUsers = () => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.fetchUsers();\r\n        console.log(data);\r\n        dispatch({ type: FETCH_USER, payload: data});\r\n    } catch (error) {\r\n        console.log(error.message);\r\n    }\r\n}\r\n\r\nexport const addUser = (user) => async (dispatch) => {\r\n    try {\r\n        const { data } = await api.createUser(user);\r\n        console.log(data);\r\n        dispatch({ type: CREATE, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}\r\n\r\nexport const updateUser = (user) => async (dispatch) => {\r\n    try{\r\n        console.log(user);\r\n        const { data } = await api.updateSesh(user);\r\n        dispatch({ type: UPDATE, payload: data });\r\n    } catch (error) {\r\n        console.log(error);\r\n    }\r\n}","C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\index.js",[],"C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\reducers\\shows.js",["100"],"C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\constants\\actionTypes.js",[],"C:\\Users\\ngmay\\Documents\\react\\flix\\client\\src\\Components\\Shows\\AddShow.js",["101","102","103","104","105","106"],{"ruleId":"107","severity":1,"message":"108","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":14},{"ruleId":"107","severity":1,"message":"111","line":8,"column":10,"nodeType":"109","messageId":"110","endLine":8,"endColumn":18},{"ruleId":"107","severity":1,"message":"112","line":18,"column":12,"nodeType":"109","messageId":"110","endLine":18,"endColumn":17},{"ruleId":"107","severity":1,"message":"113","line":19,"column":12,"nodeType":"109","messageId":"110","endLine":19,"endColumn":20},{"ruleId":"107","severity":1,"message":"114","line":23,"column":37,"nodeType":"109","messageId":"110","endLine":23,"endColumn":43},{"ruleId":"107","severity":1,"message":"115","line":33,"column":13,"nodeType":"109","messageId":"110","endLine":33,"endColumn":21},{"ruleId":"107","severity":1,"message":"116","line":39,"column":13,"nodeType":"109","messageId":"110","endLine":39,"endColumn":18},{"ruleId":"107","severity":1,"message":"117","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"118","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"119","line":2,"column":40,"nodeType":"109","messageId":"110","endLine":2,"endColumn":44},{"ruleId":"107","severity":1,"message":"120","line":2,"column":46,"nodeType":"109","messageId":"110","endLine":2,"endColumn":52},{"ruleId":"107","severity":1,"message":"121","line":2,"column":54,"nodeType":"109","messageId":"110","endLine":2,"endColumn":58},{"ruleId":"107","severity":1,"message":"122","line":3,"column":10,"nodeType":"109","messageId":"110","endLine":3,"endColumn":21},{"ruleId":"107","severity":1,"message":"111","line":5,"column":10,"nodeType":"109","messageId":"110","endLine":5,"endColumn":18},{"ruleId":"107","severity":1,"message":"123","line":7,"column":10,"nodeType":"109","messageId":"110","endLine":7,"endColumn":17},{"ruleId":"107","severity":1,"message":"116","line":13,"column":13,"nodeType":"109","messageId":"110","endLine":13,"endColumn":18},{"ruleId":"107","severity":1,"message":"124","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":19},{"ruleId":"125","severity":1,"message":"126","line":3,"column":1,"nodeType":"127","endLine":17,"endColumn":2},{"ruleId":"107","severity":1,"message":"128","line":7,"column":38,"nodeType":"109","messageId":"110","endLine":7,"endColumn":46},{"ruleId":"107","severity":1,"message":"129","line":46,"column":12,"nodeType":"109","messageId":"110","endLine":46,"endColumn":22},{"ruleId":"130","severity":1,"message":"131","line":57,"column":8,"nodeType":"132","endLine":57,"endColumn":18,"suggestions":"133"},{"ruleId":"107","severity":1,"message":"134","line":72,"column":11,"nodeType":"109","messageId":"110","endLine":72,"endColumn":17},{"ruleId":"107","severity":1,"message":"135","line":78,"column":11,"nodeType":"109","messageId":"110","endLine":78,"endColumn":16},{"ruleId":"107","severity":1,"message":"136","line":225,"column":11,"nodeType":"109","messageId":"110","endLine":225,"endColumn":16},{"ruleId":"137","severity":1,"message":"138","line":127,"column":3,"nodeType":"139","messageId":"140","endLine":127,"endColumn":6},{"ruleId":"107","severity":1,"message":"141","line":5,"column":63,"nodeType":"109","messageId":"110","endLine":5,"endColumn":66},{"ruleId":"142","replacedBy":"143"},{"ruleId":"144","replacedBy":"145"},{"ruleId":"107","severity":1,"message":"124","line":1,"column":10,"nodeType":"109","messageId":"110","endLine":1,"endColumn":19},{"ruleId":"107","severity":1,"message":"146","line":1,"column":29,"nodeType":"109","messageId":"110","endLine":1,"endColumn":35},{"ruleId":"125","severity":1,"message":"126","line":3,"column":1,"nodeType":"127","endLine":17,"endColumn":2},{"ruleId":"107","severity":1,"message":"147","line":14,"column":12,"nodeType":"109","messageId":"110","endLine":14,"endColumn":17},{"ruleId":"107","severity":1,"message":"148","line":15,"column":12,"nodeType":"109","messageId":"110","endLine":15,"endColumn":17},{"ruleId":"107","severity":1,"message":"149","line":16,"column":12,"nodeType":"109","messageId":"110","endLine":16,"endColumn":16},{"ruleId":"107","severity":1,"message":"150","line":16,"column":18,"nodeType":"109","messageId":"110","endLine":16,"endColumn":25},{"ruleId":"107","severity":1,"message":"114","line":19,"column":36,"nodeType":"109","messageId":"110","endLine":19,"endColumn":42},{"ruleId":"107","severity":1,"message":"151","line":21,"column":11,"nodeType":"109","messageId":"110","endLine":21,"endColumn":20},"no-unused-vars","'blue' is defined but never used.","Identifier","unusedVar","'getShows' is defined but never used.","'uname' is assigned a value but never used.","'password' is assigned a value but never used.","'errors' is assigned a value but never used.","'thisUser' is assigned a value but never used.","'token' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Grow' is defined but never used.","'Button' is defined but never used.","'Grid' is defined but never used.","'useDispatch' is defined but never used.","'useForm' is defined but never used.","'FETCH_ALL' is defined but never used.","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'animated' is defined but never used.","'genreLinks' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'shows'. Either include it or remove the dependency array.","ArrayExpression",["152"],"'fadeIn' is assigned a value but never used.","'flyIn' is assigned a value but never used.","'trail' is assigned a value but never used.","no-dupe-keys","Duplicate key 'row'.","ObjectExpression","unexpected","'Box' is defined but never used.","no-native-reassign",["153"],"no-negated-in-lhs",["154"],"'DELETE' is defined but never used.","'title' is assigned a value but never used.","'genre' is assigned a value but never used.","'tags' is assigned a value but never used.","'setTags' is assigned a value but never used.","'FiveStars' is assigned a value but never used.",{"desc":"155","fix":"156"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [dispatch, shows]",{"range":"157","text":"158"},[2133,2143],"[dispatch, shows]"]